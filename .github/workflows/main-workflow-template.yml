name: Template to build and push Docker images

env:
  OWNER: ${{ github.repository_owner }}

on:
  workflow_call:
    inputs:
      test:
        description: should test
        required: false
        type: string
      image:
        description: name of docker image
        required: false
        type: string
      prefix:
        description: prefix for docker images
        required: false
        type: string
        default: 'onyxia'
      context:
        description: context of docker image
        required: false
        type: string
      base_image:
        description: context of docker image
        required: true
        type: string
      base_image_gpu:
        description: context of docker image
        required: false
        type: string
      external_base_image:
        description: is base image from another organization
        required: false
        type: boolean
      python_version_1:
        description: context of docker image
        required: false
        type: string
      python_version_2:
        description: context of docker image
        required: false
        type: string
      r_version_1:
        description: context of docker image
        required: false
        type: string
      r_version_2:
        description: context of docker image
        required: false
        type: string
      spark_version:
        description: context of docker image
        required: false
        type: string
      branch:
        description: branch that triggered the workflow
        required: false
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: false
      DOCKERHUB_TOKEN:
        required: false
      GITHUB_PAT:
        required: false

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code 
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
        
      # https://github.com/actions/virtual-environments/issues/2840
      - name: Make free space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost "$AGENT_TOOLSDIRECTORY"
          docker rmi -f $(docker images -aq)
        shell: bash

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and load to the Docker client
        if: ${{ matrix.gpu != 'true' }}
        uses: docker/bake-action@v3
        with:
          load: true
          push: false
          secrets: |
            "github_token=${{ secrets.GITHUB_PAT }}"

      - name: Test image using Google's Container Structure Test
        if: ${{ matrix.gpu != 'true' }}
        uses: ./.github/actions/container-structure-test
        with:
          image: ${{ steps.generate-tags.outputs.main_tag }}
          config: ./${{ inputs.context }}/tests.yaml

      - name: Login to Docker Hub
        if: ${{ inputs.branch == 'refs/heads/main' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # - name: Push to DockerHub
      #   if: ${{ inputs.branch == 'refs/heads/main' }}
      #   uses: docker/build-push-action@v4
      #   with:
      #     push: true
      #     context: ${{ inputs.context }}
      #     tags: ${{ steps.generate-tags.outputs.tags }}
      #     build-args: |
      #       BASE_IMAGE=${{ steps.generate-build-args.outputs.base_image }}
      #       PYTHON_VERSION=${{ matrix.python_version }}
      #       R_VERSION=${{ matrix.r_version }}
      #       SPARK_VERSION=${{ matrix.spark_version }}
      #     secrets: |
      #       "github_token=${{ secrets.GITHUB_PAT }}"
